quarkus.http.port:10890
#quarkus.log.level=ALL
quarkus.log.level: INFO
#Configure the object to physical database mapper to our custom one.
quarkus.hibernate-orm.physical-naming-strategy=ch.unige.pinfo.sample.util.SamplePhysicalNamingStrategy

%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://pg:5432/${PG_DB}
%prod.quarkus.datasource.username = ${PG_USER}
%prod.quarkus.datasource.password = ${PG_PASS}


%prod.quarkus.oidc.auth-server-url=https://xxxxx
%prod.quarkus.oidc.application-type=hybrid
%prod.quarkus.oidc.authentication.scopes=profile
%prod.quarkus.oidc.client-id=xxxxxx
%prod.quarkus.oidc.credentials.secret=${client-secret}


quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:user_DB;DB_CLOSE_DELAY=-1
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=META-INF/sql/test-data.sql


# Point to the custom roles claim
quarkus.oidc.roles.role-claim-path="https://quarkus-security.com/roles"
quarkus.oidc.token.verify-access-token-with-user-info=true